{"version":3,"file":"static/js/888.5b962dbb.chunk.js","mappings":"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","sources":["service/Api.js","components/cardList/CardList.styled.jsx","components/card/Card.styled.jsx","components/image/Image.styled.jsx","components/image/Image.jsx","components/card/Card.jsx","components/button/Btn.styled.jsx","components/button/Btn.jsx","components/BtnGoBack/BtnGoBack.styled.jsx","components/BtnGoBack/BtnGoBack.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/cardList/CardList .jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["import axios from 'axios';\r\n\r\naxios.defaults.baseURL = \"https://6442a81533997d3ef9164aca.mockapi.io\";\r\n\r\nconst BASE_URL=\"https://6442a81533997d3ef9164aca.mockapi.io/users\"\r\n\r\n\r\nexport const getUsers = async () => {\r\n    const data = await axios.get(`${BASE_URL}/users`);\r\n    return data;\r\n  };\r\n\r\n\r\n  export const fetchUsers = async (page = 1) => {\r\n    const response = await axios.get(`/users?page=${page}&limit=3`);\r\n    const { data } = response;\r\n    const handledNewUsers = data.map(user => {\r\n      user.follow = false;\r\n      return user;\r\n    });\r\n    return handledNewUsers;\r\n  };\r\n  \r\n  export const updateUser = async user => {\r\n    const response = await axios.put(`/users/${user.id}`, user);\r\n    return response.data;\r\n  };\r\n  \r\n\r\n","import styled from 'styled-components' \r\n\r\nexport const Box =styled.div`\r\n  display: flex;\r\n`\r\n\r\nexport const List = styled.ul`\r\n     display: flex;\r\n  gap: 48px;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  margin-top: 70px;\r\n`","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  box-sizing: border-box;\r\n  padding: 28px 20px 36px 20px;\r\n  width: 380px;\r\n  height: 460px;\r\n  border-radius: 20px;\r\n  background-color: #5736a3;\r\n  background: linear-gradient(\r\n    114.99deg,\r\n    #471ca9 -0.99%,\r\n    #5736a3 54.28%,\r\n    #4b2a99 78.99%\r\n  );\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n\r\n  &:before {\r\n  content: '';\r\n  display: block;\r\n  height: 8px;\r\n  width: 380px;\r\n  position: absolute;\r\n  top: 214px;\r\n  left: 0;\r\n  background-color: #EBD8FF;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06), inset 0px -1.71846px 3.43693px #AE7BE3, inset 0px 3.43693px 2.5777px #FBF8FF;\r\n}\r\n`;\r\n\r\nexport const Logo = styled.img`\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 20px;\r\n`\r\nexport const ImageContainer = styled.img`\r\n  background-position: center;\r\n  height: 168px;\r\n  width: 308px;\r\n`\r\n\r\nexport const Text = styled.div`\r\n  text-align: center;\r\n`\r\nexport const Button = styled.button`\r\n  margin-top: 10px;\r\n  width: 196px;\r\n  padding: 14px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  text-shadow: none;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n  border: currentColor;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.05);\r\n  }\r\n`;\r\n\r\nexport const ButtonFollowing = styled.button`\r\n  margin-top: 10px;\r\n  width: 196px;\r\n  padding: 14px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  text-shadow: none;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  background-color: #5CD3A8;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n  border: currentColor;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    transform: scale(1.05);\r\n\r\n  }\r\n`;\r\n\r\nexport const Tweet = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  margin-bottom: 16px;\r\n  color: #ebd8ff;\r\n`;\r\n\r\nexport const Followers = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  margin-bottom: 16px;\r\n  color: #ebd8ff;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  background-image: url(\"../../img/picture.png\");\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  height: 168px;\r\n  width: 308px;\r\n`;\r\nexport const ContainerFoto = styled.div`\r\n  background-color: #5736a3;\r\n  width: 80px;\r\n  height: 80px;\r\n  border: 8px solid #ebd8ff;\r\n  box-shadow: 0px 4.391631126403809px 3.2937235832214355px 0px #fbf8ff,\r\n    inset 0px 4.391631126403809px 4.391631126403809px 0px #0000000f, insert 0px -2.1958155632019043px\r\n      4.391631126403809px 0px #ae7be3;\r\n\r\n  border-radius: 50%;\r\n  position: absolute;\r\n  top: 178px;\r\n  left: 150px;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  border-color: green;\r\n  border-radius: 50%;\r\n`;\r\n","import { Container, Img, ContainerFoto } from \"./Image.styled\"\r\n// import PropTypes from 'prop-types';\r\n\r\nconst Image = ({image, alt})=> {\r\n    return(\r\n    <Container>\r\n        <ContainerFoto>\r\n        <Img  src={image}  alt={alt}\r\n         />\r\n       </ContainerFoto>  \r\n    </Container>)\r\n}\r\n// Image.propTypes = {\r\n//     avatar: PropTypes.string.isRequired,\r\n//     user: PropTypes.string.isRequired,\r\n    \r\n// }\r\n\r\nexport default Image","\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useEffect } from 'react';\r\nimport { Container, Button, Tweet, Followers, ButtonFollowing, Text, Logo, ImageContainer } from \"./Card.styled\";\r\nimport Image from \"../image/Image\";\r\nimport goit_logo from \"../../images/goit_logo.png\";\r\nimport picture from \"../../images/picture.png\"\r\n\r\n\r\n\r\nconst Card = ( users) => {\r\n\r\n  const { id, tweets, followers, avatar, user } = users;\r\n\r\n\r\n  const [isFollowing, setIsFollowing] = useState(JSON.parse(localStorage.getItem(`${id}-isFollowing`)) ?? false)\r\n  const [numberFollowers, setNumberFollowers] = useState(JSON.parse(localStorage.getItem(`${id}-followers`)) ?? followers)\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(`${id}-isFollowing`, JSON.stringify(isFollowing));\r\n    localStorage.setItem(`${id}-followers`, JSON.stringify(numberFollowers));\r\n\r\n  }, [isFollowing, numberFollowers, id]);\r\n\r\n  const onFollowClick = () => {\r\n    setIsFollowing(true);\r\n    setNumberFollowers(numberFollowers + 1)\r\n  }\r\n\r\n    const onFollowingClick = () => {\r\n      setIsFollowing(false);\r\n      setNumberFollowers(numberFollowers - 1)\r\n  }\r\n\r\n  return (\r\n   \r\n   <Container>\r\n    <Logo src={goit_logo} alt='logo'  width='76' />\r\n    <ImageContainer src={picture} alt='picture' />\r\n  <Image image={avatar} alt={user} />\r\n\r\n  <Text>\r\n            <Tweet>{tweets} tweets</Tweet>\r\n            <Followers>\r\n{numberFollowers.toLocaleString('en-US')} followers\r\n            </Followers>\r\n            \r\n  {isFollowing ?\r\n        <ButtonFollowing type='button'\r\n          onClick={onFollowingClick}\r\n         >Following</ButtonFollowing>\r\n      : <Button type='button'\r\n          onClick={onFollowClick}\r\n          >Follow</Button>\r\n      }\r\n\r\n</Text>\r\n  </Container>);\r\n};\r\n\r\nCard.propTypes= {\r\n    user: PropTypes.string.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    tweets: PropTypes.number.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n}\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonLoadMore = styled.button`\r\ndisplay: block;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\n   margin-top: 40px;\r\n  width: 196px;\r\n  padding: 14px;\r\n  font-style: normal;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: 22px;\r\n  text-transform: uppercase;\r\n  text-shadow: none;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n  border: currentColor;\r\n\r\n  .Button:hover,\r\n  .Button:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;","\r\nimport { ButtonLoadMore } from './Btn.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ButtonLoad = ({ onClick }) => {\r\n  return <ButtonLoadMore onClick={onClick}>Load more</ButtonLoadMore>;\r\n};\r\n\r\nButtonLoad.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ButtonLoad;","import styled from 'styled-components';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport const Button = styled(NavLink)`\r\n\r\n  display: block;\r\n\r\n  border: 1px solid black;\r\n  border-radius: 5%;\r\n  margin-left: 40px;\r\n  margin-top: 20px;\r\n  padding: 5px;\r\n  text-align: center;\r\n  color: #212121;\r\n\r\n  width: 100px;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const Wrapper = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import PropTypes from 'prop-types';\r\nimport { Button, Wrapper } from './BtnGoBack.styled';\r\nimport { HiArrowSmLeft } from 'react-icons/hi';\r\n\r\nconst BtnGoBack = ({ previousLocation: { current } }) => {\r\n  return (\r\n    <Button to={current}>\r\n      <Wrapper>\r\n        <HiArrowSmLeft /> Go back\r\n      </Wrapper>\r\n    </Button>\r\n  );\r\n};\r\n\r\nBtnGoBack.propTypes = {\r\n  previousLocation: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default BtnGoBack;\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  margin-left: 24px;\r\n`;\r\n\r\nexport const ButtonFilter = styled.button`\r\n  font-family: \"Montserrat\", sans-serif;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n  color: black;\r\n  height: 50px;\r\n  width: 300px;\r\n  padding: 10px 20px;\r\n  border-radius: 5px;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: #ebd8ff;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n\r\n  &:hover {\r\n    outline: 1px solid #e84a5f;\r\n  }\r\n`;\r\n\r\nexport const BoxFilter = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  border-radius: 5px;\r\n\r\n  z-index: 1;\r\n`;\r\n\r\nexport const Link = styled.a`\r\n    color: black;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  display: block;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  background-color: #f1f1f1;\r\n`\r\n\r\nexport const Span = styled.span`\r\n  color: black;\r\n  padding: 12px 16px;\r\n  text-decoration: none;\r\n  display: block;\r\n  cursor: pointer;\r\n  width: 100%;\r\n  background-color: #f1f1f1;\r\n\r\n  &:hover {\r\n    background-color: #5cd3a8;\r\n  }\r\n`;\r\n\r\n//   export const Lable = styled.label ` font-weight: 900;`\r\n\r\n","import PropTypes from 'prop-types';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { Container, ButtonFilter, BoxFilter, Span, Link } from './Filter.styled';\r\n\r\n\r\n\r\n\r\nconst Filter = ({ options, value, onSelect }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const handleClick = () => setIsOpen(!isOpen);\r\n\r\n  const handleOptionClick = option => {\r\n    onSelect(option);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handleClickOutside = event => {\r\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('click', handleClickOutside, true);\r\n    return () => {\r\n      document.removeEventListener('click', handleClickOutside, true);\r\n    };\r\n  }, []);\r\n\r\n  \r\n\r\n  return (\r\n    <Container ref={dropdownRef}>\r\n      <ButtonFilter onClick={handleClick}>\r\n        Filter:{' '}\r\n        <Span>\r\n          {options.find(option => option.value === value)?.label}\r\n        </Span>\r\n      </ButtonFilter>\r\n      {isOpen && (\r\n        <BoxFilter>\r\n          {options.map(option => (\r\n            <Link\r\n              href=\"# \"\r\n        \r\n              key={option.value}\r\n              onClick={() => handleOptionClick(option.value)}\r\n            >\r\n              {option.label}\r\n            </Link>\r\n          ))}\r\n        </BoxFilter>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onSelect: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter\r\n","import { useState, useRef } from \"react\";\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport { List, Box } from \"./CardList.styled\";\r\nimport Card from \"../card/Card\";\r\nimport PropTypes from \"prop-types\";\r\nimport ButtonLoadMore from \"../button/Btn\";\r\nimport BtnGoBack from \"../BtnGoBack/BtnGoBack\"\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nconst CardList = ({ users }) => {\r\n  const statusFilters = {\r\n    all: 'all',\r\n    followed: 'followed',\r\n    notFollowed: 'notFollowed',\r\n  };\r\n\r\n  const cardFollows = 3;\r\n\r\n\r\n  const [next, setNext] = useState(cardFollows);\r\n  // const [users, setUsers] = useState([]);\r\n  const [filter, setFilter] = useState(statusFilters.all);\r\n  const location = useLocation();\r\n  const backLinkLocationRef = location.state?.from ?? '/home';\r\n  const previousLocation = useRef(backLinkLocationRef);\r\n  const handleMoreCard = () => {\r\n    setNext(next + cardFollows);\r\n  };\r\n\r\n\r\n \r\n\r\n  const statusFilterOptions = [\r\n    { label: 'All', value: statusFilters.all },\r\n    { label: 'Followed', value: statusFilters.followed },\r\n    { label: 'Not Followed', value: statusFilters.notFollowed },\r\n  ];\r\n\r\n  // const handleFollowClick = async user => {\r\n  //   try {\r\n  //     const updatedUser = await updateUser(user);\r\n  //     const index = users.findIndex(u => u.id === updatedUser.id);\r\n  //     if (index !== -1) {\r\n  //       const updatedUsers = [...users];\r\n  //       updatedUsers[index] = updatedUser;\r\n  //       setUsers(updatedUsers);\r\n  //     }\r\n  //   } catch (e) {\r\n  //     console.log(true);\r\n  //   }\r\n  // };\r\n\r\n  // const getFilteredUsers = (users, statusFilter) => {\r\n  //   switch (statusFilter) {\r\n  //     case statusFilters.notFollowed:\r\n  //       return users.filter(user => user.isFollowed === false);\r\n  //     case statusFilters.followed:\r\n  //       return users.filter(user => user.isFollowed === true);\r\n  //     default:\r\n  //       return users;\r\n  //   }\r\n  // };\r\n\r\n  const handleOptionChange = value => {\r\n    setFilter(value);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    <Box>\r\n    <BtnGoBack previousLocation={previousLocation}/>\r\n    <Filter\r\n          options={statusFilterOptions}\r\n          value={filter}\r\n          onSelect={handleOptionChange}\r\n        />\r\n        </Box>\r\n      <List>\r\n        {users\r\n          ?.slice(0, next)\r\n          ?.map(({ id, tweets, followers, avatar, user }) => (\r\n            <Card\r\n              key={id}\r\n              id={id}\r\n              tweets={tweets}\r\n              followers={followers}\r\n              avatar={avatar}\r\n              user={user}\r\n            />\r\n          ))}\r\n      </List>\r\n\r\n      {next < users?.length && (\r\n        <ButtonLoadMore onClick={handleMoreCard}>Load more</ButtonLoadMore>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nCardList.propTypes = {\r\n  users: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      user: PropTypes.string.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      tweets: PropTypes.number.isRequired,\r\n      followers: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default CardList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getUsers } from \"../../service/Api\";\r\nimport CardList from \"../../components/cardList/CardList \";\r\n\r\nexport const Tweets = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getUsers()\r\n      .then((response) => {\r\n        setUsers(response.data);\r\n      })\r\n      .catch((error) => {\r\n        return error;\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    \r\n      <CardList users={users} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tweets;\r\n"],"names":["axios","getUsers","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","concat","sent","abrupt","stop","apply","arguments","Box","styled","_templateObject","_taggedTemplateLiteral","List","_templateObject2","Container","Logo","ImageContainer","_templateObject3","Text","_templateObject4","Button","_templateObject5","ButtonFollowing","_templateObject6","Tweet","_templateObject7","Followers","_templateObject8","ContainerFoto","Img","image","alt","_jsx","children","src","users","_JSON$parse","_JSON$parse2","id","tweets","followers","avatar","user","_useState","useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","isFollowing","setIsFollowing","_useState3","_useState4","numberFollowers","setNumberFollowers","useEffect","setItem","stringify","_jsxs","width","picture","Image","toLocaleString","type","onClick","ButtonLoadMore","NavLink","Wrapper","current","previousLocation","to","HiArrowSmLeft","ButtonFilter","BoxFilter","Link","Span","_options$find","options","value","onSelect","isOpen","setIsOpen","dropdownRef","useRef","handleClickOutside","event","contains","target","document","addEventListener","removeEventListener","ref","find","option","label","map","href","handleOptionClick","_location$state$from","_location$state","_users$slice","statusFilters","setNext","filter","setFilter","backLinkLocationRef","useLocation","state","from","statusFilterOptions","_Fragment","BtnGoBack","Filter","slice","_ref2","Card","length","Tweets","setUsers","then","response","catch","error","CardList"],"sourceRoot":""}